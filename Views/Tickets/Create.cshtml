@using cw2_ssd.Models
@model cw2_ssd.Models.TicketViewModel

@{
    ViewBag.Title = "Create";
}

<section id="ticketsForm">
    <div class="container">
        <div class="row">
            <div style="margin-top: 10vh;" class="col-md-8">
                <h2>Create</h2>
                
                @using (Html.BeginForm()) 
                {
                    @Html.AntiForgeryToken()
                    
                    <div style="width:100%" class="form-horizontal">
                        <h4>Ticket</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.TicketID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TicketID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TicketID, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.TicketDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TicketDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TicketDate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                
                        <div class="form-group">
                            @Html.LabelFor(model => model.ErrorTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ErrorTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ErrorTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                
                        <div class="form-group">
                            @Html.LabelFor(model => model.ErrorDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ErrorDesc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ErrorDesc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                
                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketType, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.TicketType, 
                                                                    new SelectList(Enum.GetValues(typeof(Ticket.ticketType))), 
                                                                    "Select Type")
                                @Html.ValidationMessageFor(model => model.TicketType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                
                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketPriority, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.TicketPriority, 
                                    new SelectList(Enum.GetValues(typeof(Ticket.ticketPriority))), 
                                    "Select Priority")
                                @Html.ValidationMessageFor(model => model.TicketPriority, "", new { @class = "text-danger" })
                            </div>
                        </div>
                
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClientCompany, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ClientCompany, 
                                    new SelectList(Enum.GetValues(typeof(Ticket.companyName))), 
                                    "Select Company")
                                @Html.ValidationMessageFor(model => model.ClientCompany, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.TicketState, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TicketState, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TicketState, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create"/>
                            </div>
                        </div>
                    </div>
                }
                
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
